# -*- coding: utf-8 -*-
"""Freq_course.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1By2YT8bGNkFxT-K3UhGAnAL2H8loH9li
"""

import numpy as np
import matplotlib
import matplotlib.pyplot as plt



def freq_course(freq_array,f_bins,f_split):

    """inputs are a frequency array found from the FFT of
       the strain data, the size of the course array wanted
       f_bins, and the frequency in which the spacing changes
       f_split.  Output is final course array, with a linear
       in log f spacing up to a reference freqeuncy f_split,
       then constant spacing in log f."""

    f_tot = len(freq_array)
    vec1 = np.zeros(f_tot)
    vec2 = np.zeros(f_tot)
    f_course = np.zeros(f_bins)
    f_sample = freq_array[1] - freq_array[0]
    f_split = np.float16(f_split)
    for i in range(f_tot):

        if freq_array[i] < f_split:
              vec1[i] = freq_array[i]

        if freq_array[i] > f_split:
              vec2[i] = freq_array[i]
        
    vec_lin = vec1[vec1 != 0]
    vec_lin = vec_lin[(vec_lin >= 4)]
    vec_lo = vec2[vec2 != 0]
    vec_lo = vec_lo[(vec_lo <= 1024)]
    two_folds = round(np.log2(vec_lo[-1])-np.log2(vec_lo[0]))
    lin_bins = f_bins - 4* two_folds
    lo_space =   round(len(vec_lo)/two_folds)
    vec_lo_space = vec_lin[-1] - vec_lin[-2]

    vec_linear = np.logspace(np.log2(vec_lin[0]),np.log2(vec_lin[-1]), num = lin_bins,base = 2.0)
    vec_log = np.linspace(vec_lo[0], vec_lo[-1], 5 * two_folds)
        
    f_course = np.concatenate((vec_linear[1:],vec_log[1:])) 
    N_course = len(f_course)
    round_vec = np.zeros(N_course)
    inv_df = 1/f_sample

    for i in range(N_course):                                                   
        round_vec[i] = round((f_course[i])*inv_df)/inv_df
    
    return round_vec



def freq_spacing(freq_array):

    """ Simple routine for calculating frequency spacing of,
        an array. Input orignal array, output spacing array"""

    N = len(freq_array)-1
    array = np.zeros(N)

    for i in range(N):
      array[i] = freq_array[i+1] - freq_array[i]

    return array

test_array = range(8193)
test_array = np.array(test_array)/4.0
final = freq_course(test_array,20,256)
final_spacing = freq_spacing(final)

space_id = range(len(final_spacing))

test_spacing = freq_spacing(test_array)
plt.plot((final[1:]),final_spacing,'g^',label = 'Course spacing')
plt.plot((test_array[1:]),test_spacing,'b.',label ='Original spacing')
plt.ylabel('$\Delta$f')
plt.xlabel('$log_2$(f)')
plt.xlim([0,1024])
#plt.ylim([0,256])
plt.grid('True')
plt.legend()
len(final)