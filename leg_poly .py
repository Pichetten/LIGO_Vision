# -*- coding: utf-8 -*-
"""Leg_Poly.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b0vQf2paySLjqn3QoWU1fJUWBeHbUOnJ
"""

import numpy as np

"""Code to generate Legendre Polynomials, their norm
   and coefficients """

def LegPol(n,k):
        freq_bin = k
        Norm = max(freq_bin)
        Norm = int(Norm)
        N = int(len(k))
        if n == 0:
            return 1*np.ones(N)
        if n == 1:
            return 1*np.ones(N) - 2.0*(freq_bin/Norm)
        if n == 2:
            return 1*np.ones(N) - 6.0*(freq_bin/Norm) + (6.0*k*(k-1.0))/(Norm*(Norm-1.0))

def alpha_norm(n,k):
    norm = np.sum(LegPol(n,k)**2.0)
    return norm

def coeff(n,k,array):
    N = np.max(k)
    LP = LegPol(n,k)
    coeff = np.sum(np.multiply(LP,array))
    return coeff